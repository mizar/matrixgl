!function(t,r){for(var s in r)t[s]=r[s]}(window,function(t){var r={};function s(e){if(r[e])return r[e].exports;var n=r[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,s),n.l=!0,n.exports}return s.m=t,s.c=r,s.d=function(t,r,e){s.o(t,r)||Object.defineProperty(t,r,{configurable:!1,enumerable:!0,get:e})},s.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},s.n=function(t){var r=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(r,"a",r),r},s.o=function(t,r){return Object.prototype.hasOwnProperty.call(t,r)},s.p="",s(s.s=2)}({2:function(t,r,s){"use strict";s.r(r);class e{get values(){return this._values}get magnitude(){const t=this._values.reduce((t,r)=>t+r*r,0);return Math.sqrt(t)}toString(){return`Vector${this._values.length}(${this._values.join(", ")})`}}class n extends e{get x(){return this._values[0]}get y(){return this._values[1]}set x(t){this._values[0]=t}set y(t){this._values[1]=t}}class i extends e{get x(){return this._values[0]}get y(){return this._values[1]}get z(){return this._values[2]}set x(t){this._values[0]=t}set y(t){this._values[1]=t}set z(t){this._values[2]=t}}class u extends e{get x(){return this._values[0]}get y(){return this._values[1]}get z(){return this._values[2]}get w(){return this._values[3]}set x(t){this._values[0]=t}set y(t){this._values[1]=t}set z(t){this._values[2]=t}set w(t){this._values[3]=t}}class a extends n{constructor(t,r){super(),this._values=new Float32Array([t,r])}add(t){return new a(this.x+t.x,this.y+t.y)}sub(t){return new a(this.x-t.x,this.y-t.y)}mulByScalar(t){return new a(this.x*t,this.y*t)}}class o extends i{constructor(t,r,s){super(),this._values=new Float32Array([t,r,s])}add(t){return new o(this.x+t.x,this.y+t.y,this.z+t.z)}sub(t){return new o(this.x-t.x,this.y-t.y,this.z-t.z)}mulByScalar(t){return new o(this.x*t,this.y*t,this.z*t)}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}cross(t){const r=this.y*t.z-this.z*t.y,s=this.z*t.x-this.x*t.z,e=this.x*t.y-this.y*t.x;return new o(r,s,e)}normalize(){const t=this.magnitude;return 0===t?this:new o(this.x/t,this.y/t,this.z/t)}get xy(){return new a(this.x,this.y)}}class h extends u{constructor(t,r,s,e){super(),this._values=new Float32Array([t,r,s,e])}add(t){return new h(this.x+t.x,this.y+t.y,this.z+t.z,this.w+t.w)}sub(t){return new h(this.x-t.x,this.y-t.y,this.z-t.z,this.w-t.w)}mulByScalar(t){return new h(this.x*t,this.y*t,this.z*t,this.w*t)}get xyz(){return new o(this.x,this.y,this.z)}}const l=a,c=o,x=h;class y{constructor(t,r,s,e){this._values=new Float32Array([t,r,s,e])}static rotationAround(t,r){const s=Math.sin(r/2),e=Math.cos(r/2);return new y(t.x*s,t.y*s,t.z*s,e)}normalize(){const t=this.magnitude;if(0===t)return this;const r=1/t;return new y(this.x*r,this.y*r,this.z*r,this.w*r)}add(t){return new y(this.x+t.x,this.y+t.y,this.z+t.z,this.w+t.w)}mulByScalar(t){return new y(this.x*t,this.y*t,this.z*t,this.w*t)}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}slerp(t,r,s={chooseShorterAngle:!0}){let e=this.dot(t),n=t;e<0&&(e=-e,n=t.mulByScalar(-1));const i=Math.acos(e),u=Math.sin(i),a=this.mulByScalar(Math.sin((1-r)*i)/u),o=n.mulByScalar(Math.sin(r*i)/u);return a.add(o)}get magnitude(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}get norm(){return this.magnitude}get x(){return this._values[0]}get y(){return this._values[1]}get z(){return this._values[2]}get w(){return this._values[3]}set x(t){this._values[0]=t}set y(t){this._values[1]=t}set z(t){this._values[2]=t}set w(t){this._values[3]=t}get values(){return this._values}toRotationMatrix4(){const t=this.x,r=this.y,s=this.z,e=this.w;return new v(1-2*r*r-2*s*s,2*t*r+2*e*s,2*t*s-2*e*r,0,2*t*r-2*e*s,1-2*t*t-2*s*s,2*r*s+2*e*t,0,2*t*s+2*e*r,2*r*s-2*e*t,1-2*t*t-2*r*r,0,0,0,0,1)}toString(){return`Quaternion(${this.x}, ${this.y}, ${this.z}, ${this.w})`}}class w{constructor(t,r,s,e){this._values=new Float32Array([t,r,s,e])}static identity(){return new w(1,0,0,1)}get values(){return this._values}toString(){return this._values.toString()}}class d{constructor(t,r,s,e,n,i,u,a,o){this._values=new Float32Array([t,r,s,e,n,i,u,a,o])}static identity(){return new d(1,0,0,0,1,0,0,0,1)}get values(){return this._values}toString(){return this._values.toString()}}class v{constructor(t,r,s,e,n,i,u,a,o,h,l,c,x,y,w,d){this._values=new Float32Array([t,r,s,e,n,i,u,a,o,h,l,c,x,y,w,d])}static identity(){return new v(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)}static translation(t,r,s){return new v(1,0,0,0,0,1,0,0,0,0,1,0,t,r,s,1)}static scaling(t,r,s){return new v(t,0,0,0,0,r,0,0,0,0,s,0,0,0,0,1)}static rotationX(t){const r=Math.sin(t),s=Math.cos(t);return new v(1,0,0,0,0,s,r,0,0,-r,s,0,0,0,0,1)}static rotationY(t){const r=Math.sin(t),s=Math.cos(t);return new v(s,0,-r,0,0,1,0,0,r,0,s,0,0,0,0,1)}static rotationZ(t){const r=Math.sin(t),s=Math.cos(t);return new v(s,r,0,0,-r,s,0,0,0,0,1,0,0,0,0,1)}static rotationAround(t,r){return y.rotationAround(t,r).toRotationMatrix4()}static lookAt(t,r,s){const e=t.sub(r).normalize(),n=s.cross(e).normalize(),i=e.cross(n).normalize();return new v(n.x,i.x,e.x,0,n.y,i.y,e.y,0,n.z,i.z,e.z,0,-t.dot(n),-t.dot(i),-t.dot(e),1)}static orthographic(t){const r=t.top,s=t.bottom,e=t.left,n=t.right,i=t.near,u=t.far;return new v(2/(n-e),0,0,0,0,2/(r-s),0,0,0,0,-2/(u-i),0,-(n+e)/(n-e),-(r+s)/(r-s),-(u+i)/(u-i),1)}static frustum(t){const r=t.top,s=t.bottom,e=t.left,n=t.right,i=t.near,u=t.far;return new v(2*i/(n-e),0,0,0,0,2*i/(r-s),0,0,(n+e)/(n-e),(r+s)/(r-s),-(u+i)/(u-i),-1,0,0,-2*u*i/(u-i),0)}static perspective(t){const r=t.near*Math.tan(.5*t.fovYRadian),s=2*r,e=t.aspectRatio*s,n=-.5*e,i=n+e,u=r-s;return v.frustum({top:r,bottom:u,left:n,right:i,near:t.near,far:t.far})}mulByMatrix4x4(t){const r=this._values,s=r[0],e=r[1],n=r[2],i=r[3],u=r[4],a=r[5],o=r[6],h=r[7],l=r[8],c=r[9],x=r[10],y=r[11],w=r[12],d=r[13],_=r[14],g=r[15],z=t.values,f=z[0],m=z[1],M=z[2],p=z[3],B=z[4],S=z[5],A=z[6],b=z[7],F=z[8],V=z[9],$=z[10],j=z[11],O=z[12],R=z[13],Y=z[14],P=z[15];return new v(s*f+u*m+l*M+w*p,e*f+a*m+c*M+d*p,n*f+o*m+x*M+_*p,i*f+h*m+y*M+g*p,s*B+u*S+l*A+w*b,e*B+a*S+c*A+d*b,n*B+o*S+x*A+_*b,i*B+h*S+y*A+g*b,s*F+u*V+l*$+w*j,e*F+a*V+c*$+d*j,n*F+o*V+x*$+_*j,i*F+h*V+y*$+g*j,s*O+u*R+l*Y+w*P,e*O+a*R+c*Y+d*P,n*O+o*R+x*Y+_*P,i*O+h*R+y*Y+g*P)}mulByMatrix4(t){return this.mulByMatrix4x4(t)}translate(t,r,s){const e=v.translation(t,r,s);return this.mulByMatrix4x4(e)}scale(t,r,s){const e=v.scaling(t,r,s);return this.mulByMatrix4x4(e)}rotateX(t){const r=v.rotationX(t);return this.mulByMatrix4x4(r)}rotateY(t){const r=v.rotationY(t);return this.mulByMatrix4x4(r)}rotateZ(t){const r=v.rotationZ(t);return this.mulByMatrix4x4(r)}rotateAround(t,r){const s=v.rotationAround(t,r);return this.mulByMatrix4x4(s)}get values(){return this._values}toString(){return this._values.toString()}}const _=w,g=d,z=v;s.d(r,"Float32Vector2",function(){return a}),s.d(r,"Float32Vector3",function(){return o}),s.d(r,"Float32Vector4",function(){return h}),s.d(r,"Vector2",function(){return l}),s.d(r,"Vector3",function(){return c}),s.d(r,"Vector4",function(){return x}),s.d(r,"Matrix2x2",function(){return w}),s.d(r,"Matrix3x3",function(){return d}),s.d(r,"Matrix4x4",function(){return v}),s.d(r,"Matrix2",function(){return _}),s.d(r,"Matrix3",function(){return g}),s.d(r,"Matrix4",function(){return z}),s.d(r,"Quaternion",function(){return y})}}));